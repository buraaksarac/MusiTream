{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Burak\\\\Desktop\\\\deneme\\\\screens\\\\HomeScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Explore } from \"./ExploreScreen\";\nimport { Profile } from \"./ProfileScreen\";\nimport { Search } from \"./SearchScreen\";\nimport { LiveStream } from \"./StreamScreen\";\nimport { ColorArray, GradientValues, GradientStyle } from \"./SharedDesign\";\nimport { db } from \"../firebaseConnection\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\n\nfunction Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var onPress = function onPress() {\n    navigation.navigate(\"Deneme\");\n  };\n\n  return React.createElement(LinearGradient, {\n    colors: ColorArray,\n    start: GradientValues,\n    style: GradientStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      alignSelf: \"flex-end\",\n      paddingRight: 30,\n      paddingTop: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"paper-plane\",\n    color: \"black\",\n    size: 25,\n    onPress: onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Home!\")));\n}\n\nvar Tab = createBottomTabNavigator();\nexport function MyTabs() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    tabBarOptions: {\n      activeTintColor: \"#e6e6e6\",\n      inactiveTintColor: \"#737373\",\n      showLabel: false,\n      style: {\n        borderRadius: 25,\n        height: 50,\n        backgroundColor: \"#000000\",\n        borderTopWidth: 0,\n        position: \"absolute\",\n        marginBottom: 3\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(FontAwesome, {\n          name: \"home\",\n          color: color,\n          size: size - 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: Search,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(FontAwesome, {\n          name: \"search\",\n          color: color,\n          size: size - 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Explore\",\n    component: Explore,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color,\n            size = _ref4.size;\n        return React.createElement(FontAwesome, {\n          name: \"briefcase\",\n          color: color,\n          size: size - 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Stream\",\n    component: LiveStream,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color,\n            size = _ref5.size;\n        return React.createElement(FontAwesome5, {\n          name: \"broadcast-tower\",\n          color: color,\n          size: size - 1,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var color = _ref6.color,\n            size = _ref6.size;\n        return React.createElement(FontAwesome, {\n          name: \"user\",\n          color: color,\n          size: size - 2,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }));\n}\nvar chatsRef = db.collection(\"chats\");\nexport function Messaging() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messages = _useState6[0],\n      setMessages = _useState6[1];\n\n  useEffect(function () {\n    readUser();\n    var unsubscribe = chatsRef.onSnapshot(function (querySnapshot) {\n      var messagesFirestore = querySnapshot.docChanges().filter(function (_ref7) {\n        var type = _ref7.type;\n        return type === \"added\";\n      }).map(function (_ref8) {\n        var doc = _ref8.doc;\n        var message = doc.data();\n        return _objectSpread(_objectSpread({}, message), {}, {\n          createdAt: message.createdAt.toDate()\n        });\n      }).sort(function (a, b) {\n        return b.createdAt.getTime() - a.createdAt.getTime();\n      });\n      appendMessages(messagesFirestore);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  var appendMessages = useCallback(function (messages) {\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, [messages]);\n\n  function readUser() {\n    var user;\n    return _regeneratorRuntime.async(function readUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n          case 2:\n            user = _context.sent;\n\n            if (user) {\n              setUser(JSON.parse(user));\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handlePress() {\n    var _id, user;\n\n    return _regeneratorRuntime.async(function handlePress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _id = Math.random().toString(36).substring(7);\n            user = {\n              _id: _id,\n              name: name\n            };\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"user\", JSON.stringify(user)));\n\n          case 4:\n            setUser(user);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function handleSend(messages) {\n    var writes;\n    return _regeneratorRuntime.async(function handleSend$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            writes = messages.map(function (m) {\n              return chatsRef.add(m);\n            });\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Promise.all(writes));\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  if (!user) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your name\",\n      value: name,\n      onChangeText: setName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }), React.createElement(Button, {\n      onPress: handlePress,\n      title: \"Enter the chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(GiftedChat, {\n    messages: messages,\n    user: user,\n    onSend: handleSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 10\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 30\n  },\n  input: {\n    height: 50,\n    width: \"100%\",\n    borderWidth: 1,\n    padding: 15,\n    marginBottom: 20,\n    borderColor: \"gray\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Burak/Desktop/deneme/screens/HomeScreen.js"],"names":["React","useState","useEffect","useCallback","createBottomTabNavigator","FontAwesome","FontAwesome5","LinearGradient","Explore","Profile","Search","LiveStream","ColorArray","GradientValues","GradientStyle","db","GiftedChat","Home","navigation","onPress","navigate","alignSelf","paddingRight","paddingTop","flex","justifyContent","alignItems","color","Tab","MyTabs","activeTintColor","inactiveTintColor","showLabel","style","borderRadius","height","backgroundColor","borderTopWidth","position","marginBottom","tabBarIcon","size","chatsRef","collection","Messaging","user","setUser","name","setName","messages","setMessages","readUser","unsubscribe","onSnapshot","querySnapshot","messagesFirestore","docChanges","filter","type","map","doc","message","data","createdAt","toDate","sort","a","b","getTime","appendMessages","previousMessages","append","AsyncStorage","getItem","JSON","parse","handlePress","_id","Math","random","toString","substring","setItem","stringify","handleSend","writes","m","add","Promise","all","styles","container","input","StyleSheet","create","padding","width","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { View, Text, StyleSheet, TextInput, Button } from \"react-native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { FontAwesome5 } from \"@expo/vector-icons\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Explore } from \"./ExploreScreen\";\r\nimport { Profile } from \"./ProfileScreen\";\r\nimport { Search } from \"./SearchScreen\";\r\nimport { LiveStream } from \"./StreamScreen\";\r\nimport { ColorArray, GradientValues, GradientStyle } from \"./SharedDesign\";\r\nimport { db } from \"../firebaseConnection\";\r\nimport { GiftedChat } from \"react-native-gifted-chat\";\r\n\r\nfunction Home({ navigation }) {\r\n  const onPress = () => {\r\n    navigation.navigate(\"Deneme\");\r\n  };\r\n  return (\r\n    <LinearGradient\r\n      colors={ColorArray}\r\n      start={GradientValues}\r\n      style={GradientStyle}\r\n    >\r\n      <View style={{ alignSelf: \"flex-end\", paddingRight: 30, paddingTop: 60 }}>\r\n        <FontAwesome\r\n          name=\"paper-plane\"\r\n          color=\"black\"\r\n          size={25}\r\n          onPress={onPress}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <Text style={{ color: \"white\" }}>Home!</Text>\r\n      </View>\r\n    </LinearGradient>\r\n  );\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport function MyTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Home\"\r\n      tabBarOptions={{\r\n        activeTintColor: \"#e6e6e6\",\r\n        inactiveTintColor: \"#737373\",\r\n        showLabel: false,\r\n        style: {\r\n          borderRadius: 25,\r\n          height: 50,\r\n          backgroundColor: \"#000000\",\r\n          borderTopWidth: 0,\r\n          position: \"absolute\",\r\n          marginBottom: 3,\r\n        },\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={Home}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <FontAwesome name=\"home\" color={color} size={size - 2} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Search\"\r\n        component={Search}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <FontAwesome name=\"search\" color={color} size={size - 2} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Explore\"\r\n        component={Explore}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <FontAwesome name=\"briefcase\" color={color} size={size - 2} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Stream\"\r\n        component={LiveStream}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <FontAwesome5\r\n              name=\"broadcast-tower\"\r\n              color={color}\r\n              size={size - 1}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={Profile}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <FontAwesome name=\"user\" color={color} size={size - 2} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\nconst chatsRef = db.collection(\"chats\");\r\n\r\nexport function Messaging() {\r\n  const [user, setUser] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    readUser();\r\n    const unsubscribe = chatsRef.onSnapshot((querySnapshot) => {\r\n      const messagesFirestore = querySnapshot\r\n        .docChanges()\r\n        .filter(({ type }) => type === \"added\")\r\n        .map(({ doc }) => {\r\n          const message = doc.data();\r\n          return { ...message, createdAt: message.createdAt.toDate() };\r\n        })\r\n        .sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\r\n      appendMessages(messagesFirestore);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const appendMessages = useCallback(\r\n    (messages) => {\r\n      setMessages((previousMessages) =>\r\n        GiftedChat.append(previousMessages, messages)\r\n      );\r\n    },\r\n    [messages]\r\n  );\r\n\r\n  async function readUser() {\r\n    const user = await AsyncStorage.getItem(\"user\");\r\n    if (user) {\r\n      setUser(JSON.parse(user));\r\n    }\r\n  }\r\n  async function handlePress() {\r\n    const _id = Math.random().toString(36).substring(7);\r\n    const user = { _id, name };\r\n    await AsyncStorage.setItem(\"user\", JSON.stringify(user));\r\n    setUser(user);\r\n  }\r\n  async function handleSend(messages) {\r\n    const writes = messages.map((m) => chatsRef.add(m));\r\n    await Promise.all(writes);\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enter your name\"\r\n          value={name}\r\n          onChangeText={setName}\r\n        />\r\n        <Button onPress={handlePress} title=\"Enter the chat\" />\r\n      </View>\r\n    );\r\n  }\r\n  return <GiftedChat messages={messages} user={user} onSend={handleSend} />;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 30,\r\n  },\r\n  input: {\r\n    height: 50,\r\n    width: \"100%\",\r\n    borderWidth: 1,\r\n    padding: 15,\r\n    marginBottom: 20,\r\n    borderColor: \"gray\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}