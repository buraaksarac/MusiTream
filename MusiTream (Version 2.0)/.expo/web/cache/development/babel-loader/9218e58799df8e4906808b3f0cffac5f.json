{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Burak\\\\Desktop\\\\deneme\\\\screens\\\\RegisterScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Input } from \"react-native-elements\";\nimport { auth } from \"../firebaseConnection\";\nexport function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var register = function register() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (authUser) {\n      authUser.user.updateProfile({\n        displayName: name\n      });\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var myAlert = function myAlert() {\n    return Alert.alert(\"   \", \"Register successful\", [{\n      text: \"OK\"\n    }, navigation.navigate(\"Login\")], {\n      cancelable: true\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Name\",\n    autoFocus: true,\n    type: \"text\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    placeholderTextColor: \"#999999\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Email\",\n    type: \"email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    placeholderTextColor: \"#999999\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    type: \"password\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    placeholderTextColor: \"#999999\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Register\",\n    onPress: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Burak/Desktop/deneme/screens/RegisterScreen.js"],"names":["React","useState","Input","auth","Register","navigation","name","setName","email","setEmail","password","setPassword","register","createUserWithEmailAndPassword","then","authUser","user","updateProfile","displayName","catch","error","alert","message","myAlert","Alert","text","navigate","cancelable","flex","justifyContent","alignItems","backgroundColor","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,IAAT;AAEA,OAAO,SAASC,QAAT,OAAkC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBACfJ,QAAQ,CAAC,EAAD,CADO;AAAA;AAAA,MAChCK,IADgC;AAAA,MAC1BC,OAD0B;;AAAA,mBAEbN,QAAQ,CAAC,EAAD,CAFK;AAAA;AAAA,MAEhCO,KAFgC;AAAA,MAEzBC,QAFyB;;AAAA,mBAGPR,QAAQ,CAAC,EAAD,CAHD;AAAA;AAAA,MAGhCS,QAHgC;AAAA,MAGtBC,WAHsB;;AAKvC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBT,IAAAA,IAAI,CACDU,8BADH,CACkCL,KADlC,EACyCE,QADzC,EAEGI,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClBA,MAAAA,QAAQ,CAACC,IAAT,CAAcC,aAAd,CAA4B;AAAEC,QAAAA,WAAW,EAAEZ;AAAf,OAA5B;AACD,KAJH,EAKGa,KALH,CAKS,UAACC,KAAD;AAAA,aAAWC,KAAK,CAACD,KAAK,CAACE,OAAP,CAAhB;AAAA,KALT;AAMD,GAPD;;AAQA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,WACdC,KAAK,CAACH,KAAN,CACE,KADF,EAEE,qBAFF,EAGE,CAAC;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAD,EAAiBpB,UAAU,CAACqB,QAAX,CAAoB,OAApB,CAAjB,CAHF,EAIE;AACEC,MAAAA,UAAU,EAAE;AADd,KAJF,CADc;AAAA,GAAhB;;AASA,SACE,oBAAC,oBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,eAAe,EAAE;AAJZ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,MADd;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEzB,IAJT;AAKE,IAAA,YAAY,EAAE,sBAACmB,IAAD;AAAA,aAAUlB,OAAO,CAACkB,IAAD,CAAjB;AAAA,KALhB;AAME,IAAA,oBAAoB,EAAC,SANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAgBE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEjB,KAHT;AAIE,IAAA,YAAY,EAAE,sBAACiB,IAAD;AAAA,aAAUhB,QAAQ,CAACgB,IAAD,CAAlB;AAAA,KAJhB;AAKE,IAAA,oBAAoB,EAAC,SALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAuBE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,eAAe,MAHjB;AAIE,IAAA,KAAK,EAAEf,QAJT;AAKE,IAAA,YAAY,EAAE,sBAACe,IAAD;AAAA,aAAUd,WAAW,CAACc,IAAD,CAArB;AAAA,KALhB;AAME,IAAA,oBAAoB,EAAC,SANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,EA+BE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAyB,IAAA,OAAO,EAAEb,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,EAgCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEoB,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,CADF;AAoCD","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { View, Button, Alert, KeyboardAvoidingView } from \"react-native\";\r\nimport { Input } from \"react-native-elements\";\r\nimport { auth } from \"../firebaseConnection\";\r\n\r\nexport function Register({ navigation }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  //console.log(name);\r\n  const register = () => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        authUser.user.updateProfile({ displayName: name });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n  const myAlert = () =>\r\n    Alert.alert(\r\n      \"   \",\r\n      \"Register successful\",\r\n      [{ text: \"OK\" }, navigation.navigate(\"Login\")],\r\n      {\r\n        cancelable: true,\r\n      }\r\n    );\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <Input\r\n        placeholder=\"Name\"\r\n        autoFocus\r\n        type=\"text\"\r\n        value={name}\r\n        onChangeText={(text) => setName(text)}\r\n        placeholderTextColor=\"#999999\"\r\n      />\r\n      <Input\r\n        placeholder=\"Email\"\r\n        type=\"email\"\r\n        value={email}\r\n        onChangeText={(text) => setEmail(text)}\r\n        placeholderTextColor=\"#999999\"\r\n      />\r\n      <Input\r\n        placeholder=\"Password\"\r\n        type=\"password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n        placeholderTextColor=\"#999999\"\r\n      />\r\n      <Button title=\"Register\" onPress={register} />\r\n      <View style={{ height: 100 }} />\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}